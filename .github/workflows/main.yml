name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DB_HOST: localhost
      DB_PORT: "5432"
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        run: swag init -g main.go -o docs

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          DB_HOST=$DB_HOST
          DB_PORT=$DB_PORT
          DB_USER=$DB_USER
          DB_PASS=$DB_PASS
          DB_NAME=$DB_NAME
          DATABASE_URL=$DATABASE_URL
          EOF

      - name: Apply schema (optional)
        if: hashFiles('db/schema.sql') != ''
        run: |
          PGPASSWORD=$DB_PASS psql \
            -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME \
            -v ON_ERROR_STOP=1 \
            -f db/schema.sql

      - name: Run tests
        run: go test ./... -v

      - name: Build
        run: go build -o app .
